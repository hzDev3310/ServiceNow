import { VerifyLocale } from '@vonage/verify2/dist/enums';
import { EmailWorkflow } from '@vonage/verify2/dist/types/emailWorkflow';
import { SMSWorkflow } from '@vonage/verify2/dist/types/smsWorkflow';
import { SilentAuthWorkflow } from '@vonage/verify2/dist/types/silentAuthWorkflow';
import { VoiceWorkflow } from '@vonage/verify2/dist/types/voiceWorkflow';
import { WhatsAppInteractiveWorkflow } from '@vonage/verify2/dist/types/whatsAppInteractiveWorkflow';
import { WhatsAppWorkflow } from '@vonage/verify2/dist/types/whatsAppWorkflow';
export type SMSWorkflowRequest = {
    app_hash?: string;
    content_id?: string;
    entity_id?: string;
} & Omit<SMSWorkflow, 'appHash'>;
export type SilentAuthWorkflowRequest = {
    redirect_url: string;
} & Omit<SilentAuthWorkflow, 'redirectUrl'>;
/**
 * Represents a verification request for sending verification codes via
 * different communication channels.
 */
export type VerificationRequest = {
    /**
     * The brand associated with the verification request.
     */
    brand: string;
    /**
     * An array of workflow configurations for sending verification codes via
     * different channels. Each element in the array corresponds to a specific
     * channel workflow.
     */
    workflow: Array<EmailWorkflow | SMSWorkflowRequest | SilentAuthWorkflowRequest | VoiceWorkflow | WhatsAppInteractiveWorkflow | WhatsAppWorkflow>;
    /**
     * (Optional) The verification code to be sent.
     */
    code?: string;
    /**
     * (Optional) The locale for the verification request.
     */
    locale?: VerifyLocale | string;
    /**
     * (Optional) The timeout duration for the verification channel in seconds.
     */
    channel_timeout?: number;
    /**
     * (Optional) The client reference associated with the verification request.
     */
    client_ref?: string;
    /**
     * (Optional) The length of the verification code, if not provided,
     * defaults to 4 digits.
     */
    code_length?: 4 | 5 | 6 | 7 | 8 | 9 | 10;
    /**
     * (Optional) Indicates whether fraud checking is enabled for the
     * verification request.
     */
    fraud_check?: boolean;
};
